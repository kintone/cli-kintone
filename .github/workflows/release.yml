name: release
on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create draft release
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@e0b9d1885d92e9a93d5ce8656de60e3b806e542c # v3
        id: release
        with:
          command: manifest

  rename:
    name: Rename release title
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    env:
      GH_REPO: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - run: |
          gh release edit ${{ needs.release.outputs.tag_name }} \
          --title "Release cli-kintone ${{ needs.release.outputs.tag_name }}"

  upload:
    name: Upload executables
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    steps:
      - uses: jonabc/setup-licensed@d6b3a6f7058c2b40c06d205e13e15c2418977566 # renovate: tag=v1.1.4
        with:
          version: '3.x'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn build:artifacts
      - name: Upload executables
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(jq -r '.version' ./package.json)
          gh release upload ${{ needs.release.outputs.tag_name }} \
            ${GITHUB_WORKSPACE}/artifacts/cli-kintone_v${VERSION}_linux.zip \
            ${GITHUB_WORKSPACE}/artifacts/cli-kintone_v${VERSION}_macos.zip \
            ${GITHUB_WORKSPACE}/artifacts/cli-kintone_v${VERSION}_win.zip

  publish:
    name: Publish release
    runs-on: ubuntu-latest
    needs: [release, rename, upload]
    env:
      GH_REPO: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - run: gh release edit ${{ needs.release.outputs.tag_name }} --draft=false
