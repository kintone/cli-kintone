name: release
on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create draft release
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: create-iat
        with:
          app-id: ${{ secrets.RELEASE_GITHUB_APP_ID}}
          private-key: ${{ secrets.RELEASE_GITHUB_APP_KEY }}
      - uses: google-github-actions/release-please-action@db8f2c60ee802b3748b512940dde88eabd7b7e01 # v3
        id: release
        with:
          token: ${{ steps.create-iat.outputs.token }}
          command: manifest

  rename:
    name: Rename release title
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    env:
      GH_REPO: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - run: |
          gh release edit ${{ needs.release.outputs.tag_name }} \
          --title "Release cli-kintone ${{ needs.release.outputs.tag_name }}"

  upload:
    name: Upload executables
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    steps:
      # setup ruby environment before running jonabc/setup-licensed
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ruby

      - uses: jonabc/setup-licensed@d6b3a6f7058c2b40c06d205e13e15c2418977566 # renovate: tag=v1.1.4
        with:
          version: "4.x"
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2

      - uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - run: pnpm build:artifacts
      - name: Upload executables
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(jq -r '.version' ./package.json)
          gh release upload ${{ needs.release.outputs.tag_name }} \
            ${GITHUB_WORKSPACE}/artifacts/cli-kintone_v${VERSION}_linux.zip \
            ${GITHUB_WORKSPACE}/artifacts/cli-kintone_v${VERSION}_macos.zip \
            ${GITHUB_WORKSPACE}/artifacts/cli-kintone_v${VERSION}_win.zip

  publish:
    name: Publish release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [release, rename, upload]
    env:
      GH_REPO: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - run: gh release edit ${{ needs.release.outputs.tag_name }} --draft=false
